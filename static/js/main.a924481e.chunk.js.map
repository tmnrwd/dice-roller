{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["historyID","App","props","saveStateToLocalStorage","key","state","localStorage","setItem","JSON","stringify","setStateFromLocalStorage","hasOwnProperty","value","getItem","parse","setState","e","advantage","saveRollAdvantage","disadvantage","saveRollDisadvantage","clearLocalStorage","clear","window","location","reload","resetHistory","history","Date","now","diceRoll","event","max","diceRolled","mod","label","preventDefault","modifier","roll1","roll2","roll3","roll4","diceRolledArray","advHistoryArray","i","getRandomInt","push","arrayTotal","reduce","a","b","result","parseInt","arrayString","join","toast","posMod","Math","abs","latestRoll","advantageRolls","searchHistory","newHistory2","sort","scrollToTop","pushDie","dice","sides","addDie","uuidv4","deleteDie","current","index","indexOf","splice","saveRoll","savedRolls","saveDiceRolled","saveRollSides","saveRollModifier","saveLabel","deleteRoll","historyRef","scrollTop","handleChange","newState","target","name","handleSubmit","React","createRef","this","round","random","length","map","Table","className","onClick","reverse","findIndex","item","rolledArrayString","Container","fluid","Row","Col","bordered","renderDice","Form","type","step","onChange","min","showSavedRolls","ref","showHistory","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a924481e.chunk.js","sourcesContent":["import React from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nlet historyID = 1;\n\nclass App extends React.Component {\nconstructor(props){\n  super(props)\n  this.historyRef = React.createRef();\n  this.state = {\n    dice: [{sides: 4, diceRolled: 1, key: uuidv4()},\n      {sides: 6, diceRolled: 1, key: uuidv4()},\n      {sides: 8, diceRolled: 1, key: uuidv4()},\n      {sides: 10, diceRolled: 1, key: uuidv4()},\n      {sides: 12, diceRolled: 1, key: uuidv4()},\n      {sides: 20, diceRolled: 1, key: uuidv4()},\n      {sides: 100, diceRolled: 1, key: uuidv4()},],\n    addDie: 2,\n    modifier: 0,\n    diceRolled: 1,\n    history: [{\"max\": 20, \"result\": 1, \"mod\": 0, \"diceRolled\": 1, \"rolledArrayString\": \"1\", \"key\": 0, \"label\": \"My d20 Roll\", advantage: \"advantage\", advantageRolls: \"1, 1\"}],\n    savedRolls: [{\"saveDiceRolled\": 2, \"sides\": 4, \"modifier\": 2, \"label\": \"Healing Potion\"},\n                 {\"saveDiceRolled\": 1, \"sides\": 20, \"modifier\": 5, \"label\": \"Attack\", \"advantage\": \"advantage\"}],\n    saveLabel: \"\",\n    saveDiceRolled: 1,\n    saveRollSides: 2,\n    saveRollModifier: 0,\n    advantage: false,\n    saveRollAdvantage: false,\n    disadvantage: false,\n    saveRollDisadvantage: false,\n  }\n}\n\ncomponentDidMount() {\n    this.setStateFromLocalStorage();\n}\n\nsaveStateToLocalStorage = () => {\n  for (let key in this.state) {\n    localStorage.setItem(key, JSON.stringify(this.state[key]));\n  }\n}\n\nsetStateFromLocalStorage = () => {\n  for (let key in this.state) {\n    if (localStorage.hasOwnProperty(key)) {\n      let value = localStorage.getItem(key);\n      try {\n        value = JSON.parse(value);\n        this.setState({ [key]: value });\n      } catch (e) {\n        // handle empty string\n        this.setState({ [key]: value });\n      }\n    }\n  }\n  this.setState({\n    advantage: false,\n    saveRollAdvantage: false,\n    disadvantage: false,\n    saveRollDisadvantage: false,\n  })\n}\n\nclearLocalStorage = () =>{\n  localStorage.clear();\n  window.location.reload();\n}\n\nresetHistory = () =>{\n  this.setState({\n    history: [{\"max\": 20, \"result\": 1, \"mod\": 0, \"diceRolled\": 1, \"rolledArrayString\": \"1\", \"key\": Date.now()}],\n  })\n}\n\ngetRandomInt(max) {\n  let firstStep = Math.round(Math.random() * (max - 1) + 1);\n  return firstStep\n}\n\nsearchHistory(){\n  for (let i=0; i < this.state.history.length; i++) {\n      if (this.state.history[i].key === historyID) {\n          historyID++;\n      }\n  }\n}\n\ndiceRoll = (event, max, diceRolled, mod, advantage, label, disadvantage) => {\n  event.preventDefault();\n  if (!diceRolled) { diceRolled = this.state.diceRolled;}\n  if (!mod) {\n    mod = this.state.modifier;\n  }\n  if (!advantage) { advantage = this.state.advantage }\n  if (!disadvantage) { disadvantage = this.state.disadvantage }\n  let diceRolledArray = [];\n  let roll1;\n  let roll2;\n  let roll3;\n  let roll4;\n  let advHistoryArray = [];\n    let i = 0;\n    while (i < diceRolled) {\n      roll1 = this.getRandomInt(max);\n      roll2 = this.getRandomInt(max);\n        if (advantage){\n        if (roll2 > roll1){\n          roll3 = roll2;\n          roll4 = roll1;\n        } else { roll3 = roll1; roll4 = roll2; }\n        }\n        else if (disadvantage){\n          if (roll2 < roll1){\n            roll3 = roll2;\n            roll4 = roll1;\n          } else { roll3 = roll1; roll4 = roll2;  }\n          } else {\n            roll3 = roll1; roll4 = roll2;\n          }\n      diceRolledArray.push(roll3);\n      advHistoryArray.push(` ${roll3}, ${roll4}`);\n      i++;\n  }\n  let arrayTotal = diceRolledArray.reduce((a,b) => (a + b));\n  let result = parseInt(arrayTotal) + parseInt(mod);\n  let arrayString = diceRolledArray.join(\", \");\n  if (mod > -1) {\n  toast(<div>{diceRolled}d{max} result: {result}\n  <br/>\n  ({arrayString} + {mod})<br/>\n  { advantage && !disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { advantage && disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { disadvantage && !advantage ? `Disadvantage rolls: ${roll3}, ${roll4}` : `` }\n    </div>);\n  } else {\n    let posMod = Math.abs(mod);\n    toast(<div>{diceRolled}d{max} result: {result}\n      <br/>\n      ({arrayString} - {posMod} )<br/>\n      { advantage && !disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { advantage && disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { disadvantage && !advantage ? `Disadvantage rolls: ${roll3}, ${roll4}` : `` }\n        </div>);\n  }\n  let latestRoll = { \"max\": max, \"result\": result, \"mod\": mod, \"diceRolled\": diceRolled, \"rolledArrayString\": arrayString };\n  if (advantage||disadvantage) { \n  let arrayString = advHistoryArray.join(\"; \");\n    latestRoll.advantageRolls = arrayString;\n    if (advantage){latestRoll.advantage = \"advantage\";}\n    if (disadvantage){latestRoll.advantage = \"disadvantage\";}\n  }\n  if (label){\n    latestRoll.label = label;\n  }\n  this.searchHistory();\n  latestRoll.key = historyID;\n  let newHistory = [...this.state.history, latestRoll];\n  let newHistory2 = newHistory.sort((a, b) => a.key - b.key);\n  this.setState({\n    history: newHistory2\n  })\n  this.scrollToTop();\n}\n\npushDie = () => {\n  this.setState({\n    dice: [...this.state.dice, \n      { sides: this.state.addDie, diceRolled: this.state.diceRolled, key: uuidv4(), }\n    ],\n    addDie: 2,\n    diceRolled: 1,\n  })\n}\n\ndeleteDie = (event, current) => {\n  event.preventDefault();\n  let index = this.state.dice.indexOf(current);\n  this.state.dice.splice(index, 1);\n  this.setState({\n    dice: this.state.dice\n  })\n}\n\nsaveRoll = () => {\n  this.setState({\n    savedRolls: [...this.state.savedRolls, {\n      \"saveDiceRolled\": this.state.saveDiceRolled,\n      \"sides\": this.state.saveRollSides,\n      \"modifier\": this.state.saveRollModifier,\n      \"advantage\": this.state.saveRollAdvantage,\n      \"disadvantage\": this.state.saveRollDisadvantage,\n      \"label\": this.state.saveLabel,\n      \"key\": Date.now(),\n    }],\n    addDie: 2,\n    saveLabel: \"\",\n  })\n  //console.log(this.state.savedRolls)\n}\n\ndeleteRoll = (event, current) => {\n  event.preventDefault();\n  let index = this.state.savedRolls.indexOf(current);\n  this.state.savedRolls.splice(index, 1);\n  this.setState({\n    savedRolls: this.state.savedRolls\n  })\n}\n\nrenderDice() {\n  return this.state.dice.map((current) =>\n  <>\n  <Table key={current.key}>\n  <tbody className=\"text-center\">\n      <tr>\n      <td><button className=\"buttons\" onClick={(event) => this.diceRoll(event, current.sides, current.diceRolled, )}>{current.diceRolled}d{current.sides}</button></td>\n      <td><button className=\"buttons\" onClick={(event) => this.deleteDie(event, current)}>Remove</button></td>\n      </tr>\n      </tbody>\n    </Table>\n  </>\n  )\n}\n\nshowHistory() {\n  return this.state.history.reverse().map((current) =>\n  <>\n  <Table key={this.state.history.findIndex(item => item.key === current.key)}>\n    <tbody>\n  <tr>\n    <td>{current.label}</td>\n    <td className=\"td-small\">{current.diceRolled}d{current.max} roll</td>\n    <td className=\"td-small\">{current.result}</td>\n    <td className=\"wide-td\">({current.rolledArrayString} + {current.mod})</td>\n    <td className=\"wide-td\">{current.advantage === \"advantage\" ? `Advantage rolls: ${current.advantageRolls}` : \"\"} {current.advantage === \"disadvantage\" ? `Disadvantage rolls: ${current.advantageRolls}` : \"\"}</td>\n  </tr>\n  </tbody>\n  </Table>\n  </>\n  )\n}\n\n\nscrollToTop = () => {\n  this.historyRef.current.scrollTop = 0;\n};\n\n\nshowSavedRolls() {\n  return this.state.savedRolls.map((current) =>\n  <>\n  <Table key={current.key} >\n  <tbody className=\"fixed-width-columns text-center\">\n<tr>\n      <td >{current.label}</td>\n      <td ><button  className=\"buttons\" onClick={(event) => this.diceRoll(event, current.sides, current.saveDiceRolled, current.modifier, current.advantage, current.label)}>{current.saveDiceRolled}d{current.sides} + {current.modifier}</button></td>\n      <td >{current.advantage ? \"Advantage\" : <i>       </i>} {current.disadvantage ? \"Disadvantage\" : <i>       </i>}</td>\n      <td><button  className=\"buttons\" onClick={(event) => this.deleteRoll(event, current)}>Remove</button></td>\n      </tr>\n      </tbody>\n      </Table>\n  </>\n  )\n}\n\nhandleChange = (event) => {\n  const newState = {};\n  if (event.target.name === 'advantage'){\n    //console.log(\"trig if, advantage in state is: \", this.state.advantage);\n    newState[event.target.name] = !this.state.advantage\n    //console.log(\"after if, advantage in state is: \", this.state.advantage)\n}\nelse if (event.target.name === 'saveRollAdvantage'){\n  //console.log(\"trig if, saveRollAdvantage in state is: \", this.state.saveRollAdvantage);\n  newState[event.target.name] = !this.state.saveRollAdvantage\n  //console.log(\"after if, saveRollAdvantage in state is: \", this.state.saveRollAdvantage)\n}\nelse { newState[event.target.name] = event.target.value }\n  this.setState(newState)\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault();\n  this.setState({\n    dice: [...this.state.dice, this.state.addDie]\n  })\n}\n\nrender () {\n    return (\n    <>\n      <Container fluid>\n      <ToastContainer />\n      <Container>\n      <Row>\n      <Col >\n\n      <Table bordered>\n        <thead>\n          <tr>\n          <th>Dice</th>\n          </tr>\n          </thead>\n        <div className=\"rolls-container\">\n        {this.renderDice()}\n        </div>\n        </Table>\n\n      <Form>\n      <label>\n      <br/>Modifier: <br/>\n          <input type=\"number\" name=\"modifier\" step=\"1\" value={this.state.modifier} onChange={(e) => this.handleChange(e)} />\n          <br/>Advantage: <input type=\"checkbox\" name=\"advantage\" value={this.state.advantage} onChange={(e) => this.handleChange(e)} />\n          <br/>Disadvantage: <input type=\"checkbox\" name=\"disadvantage\" value={this.state.disadvantage} onChange={(e) => this.handleChange(e)} />\n          <hr/>\n      <u>Add Custom Die</u>\n          <br/>Number of dice to roll: <br/>\n          <input type=\"number\" name=\"diceRolled\" step=\"1\" value={this.state.diceRolled} onChange={(e) => this.handleChange(e)} />\n          \n          <br/>Custom die sides:<br/>\n          <input type=\"number\" name=\"addDie\" min=\"1\" step=\"1\" value={this.state.addDie} onChange={(e) => this.handleChange(e)} />\n          \n        </label>\n        <br/>\n        <input type=\"button\" onClick={this.pushDie} value=\"Add Custom Die\"/>\n        </Form>\n        \n<br/><br/>\n        \n      </Col>\n\n      <Col>\n\n      <Table bordered>\n        <thead>\n          <tr>\n          <th>Saved Rolls</th>\n          </tr>\n          </thead>\n        <div className=\"saved-rolls-container\">\n        {this.showSavedRolls()}\n        </div>\n        </Table>\n  \n      <Form>\n        <label>\n          <u>Save roll</u>\n          <br/>Label:<br/> <input type=\"text\" name=\"saveLabel\" value={this.state.saveLabel} onChange={(e) => this.handleChange(e)} />\n          <br/>Number of dice to roll:<br/> <input type=\"number\" name=\"saveDiceRolled\" min=\"1\" step=\"1\" value={this.state.saveDiceRolled} onChange={(e) => this.handleChange(e)} />\n          <br/>Die sides:<br/> <input type=\"number\" name=\"saveRollSides\" min=\"1\" step=\"1\" value={this.state.saveRollSides} onChange={(e) => this.handleChange(e)} />\n          <br/>Modifier:<br/> <input type=\"number\" name=\"saveRollModifier\" step=\"1\" value={this.state.saveRollModifier} onChange={(e) => this.handleChange(e)} />\n          <br/>Advantage: <input type=\"checkbox\" name=\"saveRollAdvantage\" value={this.state.saveRollAdvantage} onChange={(e) => this.handleChange(e)} />\n          {this.state.saveRollAdvantage}\n          <br/>Disadvantage: <input type=\"checkbox\" name=\"saveRollDisadvantage\" value={this.state.saveRollDisadvantage} onChange={(e) => this.handleChange(e)} />\n          {this.state.saveRollDisadvantage}\n        </label>\n\n        <br/>\n        <input type=\"button\" onClick={this.saveRoll} value=\"Save Roll\"/>\n        </Form>\n        <br/>\n      </Col>\n     \n      <Col >\n      <Table bordered>\n        <thead>\n          <tr>\n          <th>History</th>\n          </tr>\n          </thead>\n        <div className=\"history-container\" ref={this.historyRef}>\n        {this.showHistory()}\n        </div>\n \n      </Table>\n      <Form>\n      <label>\n          <br/><br/>\n        <input type=\"button\" onClick={this.saveStateToLocalStorage} value=\"Save rolls, dice, and history\" />\n        <br/>If you save your custom dice, custom rolls, and roll history, they will be here when you come back to this page. Otherwise, you'll start afresh. \n        <br/><br/>\n        <input type=\"button\" onClick={this.resetHistory} value=\"Reset History\" />\n        <br/>This button resets the roll history to its original state.\n        <br/><br/>\n        <input type=\"button\" onClick={this.clearLocalStorage} value=\"Reset to Default\" />\n        <br/>This button resets your custom dice, custom rolls, and roll history to their original states.\n        </label>\n        </Form>\n \n      </Col>\n      </Row>\n      </Container>\n      </Container>\n    </>\n  );\n}\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
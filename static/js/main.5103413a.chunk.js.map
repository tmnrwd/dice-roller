{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["historyID","App","props","saveStateToLocalStorage","key","state","localStorage","setItem","JSON","stringify","setStateFromLocalStorage","hasOwnProperty","value","getItem","parse","setState","e","resetCheckBoxes","advantage","saveRollAdvantage","disadvantage","saveRollDisadvantage","explode","saveRollExplode","reroll","saveRollReroll","clearLocalStorage","clear","window","location","reload","addCharacter","name","newCharacter","character","dice","sides","diceRolled","uuidv4","addDie","modifier","history","advantageRolls","savedRolls","saveLabel","saveDiceRolled","saveRollSides","saveRollModifier","characters","setCharacter","i","length","resetHistory","sortHistory","newHistory2","sort","a","b","diceRoll","event","max","mod","label","preventDefault","roll1","roll2","roll3","roll4","diceRolledArray","advHistoryArray","getRandomInt","push","arrayTotal","reduce","result","parseInt","arrayString","join","toast","posMod","Math","abs","latestRoll","searchHistory","scrollToTop","pushDie","deleteDie","current","index","indexOf","splice","saveRoll","Date","now","deleteRoll","historyRef","scrollTop","handleChange","newState","target","handleSubmit","React","createRef","this","round","random","map","Table","className","onClick","reverse","rolledArrayString","Container","fluid","Row","Col","bordered","renderDice","Form","type","step","onChange","min","data-tip","data-for","id","place","effect","showSavedRolls","ref","showHistory","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5103413a.chunk.js","sourcesContent":["import React from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport ReactToolTip from 'react-tooltip';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nlet historyID = 1;\nlet character = [0];\n\nclass App extends React.Component {\nconstructor(props){\n  super(props)\n  this.historyRef = React.createRef();\n  this.state = {\n   character: \"default\",\n    dice: [{sides: 4, diceRolled: 1, key: uuidv4()},\n      {sides: 6, diceRolled: 1, key: uuidv4()},\n      {sides: 8, diceRolled: 1, key: uuidv4()},\n      {sides: 10, diceRolled: 1, key: uuidv4()},\n      {sides: 12, diceRolled: 1, key: uuidv4()},\n      {sides: 20, diceRolled: 1, key: uuidv4()},\n      {sides: 100, diceRolled: 1, key: uuidv4()},],\n    addDie: 2,\n    modifier: 0,\n    diceRolled: 1,\n    history: [{\"max\": 20, \"result\": 1, \"mod\": 0, \"diceRolled\": 1, \"rolledArrayString\": \"1\", \"key\": 0, \"label\": \"My d20 Roll\", advantage: \"advantage\", advantageRolls: \"1, 1\"}],\n    savedRolls: [{\"saveDiceRolled\": 2, \"sides\": 4, \"modifier\": 2, \"label\": \"Healing Potion\"},\n                 {\"saveDiceRolled\": 1, \"sides\": 20, \"modifier\": 5, \"label\": \"Attack\", \"advantage\": \"advantage\"}],\n    label:\"\",\n    saveLabel: \"\",\n    saveDiceRolled: 1,\n    saveRollSides: 2,\n    saveRollModifier: 0,\n    advantage: false,\n    saveRollAdvantage: false,\n    disadvantage: false,\n    saveRollDisadvantage: false,\n    explode: false,\n    saveRollExplode: false,\n    reroll: 0,\n    saveRollReroll: 0,\n}\n}\n\ncomponentDidMount() {\n    this.setStateFromLocalStorage();\n    this.resetCheckBoxes();\n}\n\nsaveStateToLocalStorage = () => {\n  for (let key in this.state) {\n    localStorage.setItem(key, JSON.stringify(this.state[key]));\n  }\n}\n\nsetStateFromLocalStorage = () => {\n  for (let key in this.state) {\n    if (localStorage.hasOwnProperty(key)) {\n      let value = localStorage.getItem(key);\n      try {\n        value = JSON.parse(value);\n        this.setState({ [key]: value });\n      } catch (e) {\n        // handle empty string\n        this.setState({ [key]: value });\n      }\n    }\n  }\n}\n\nresetCheckBoxes = () => {\n  this.setState({\n    advantage: false,\n    saveRollAdvantage: false,\n    disadvantage: false,\n    saveRollDisadvantage: false,\n    explode: false,\n    saveRollExplode: false,\n    reroll: 0,\n    saveRollReroll: 0,\n  })\n}\n/*\nresetCheckBoxesCharSwitch = (prevState) => {\n  let charCopy = Object.assign({}, prevState.characters[charIndex]);\n  charCopy.advantage = false;\n  charCopy.saveRollAdvantage = false;\n  charCopy.disadvantage = false;\n  charCopy.saveRollDisadvantage = false;\n  charCopy.explode = false;\n  charCopy.saveRollExplode = false;\n  charCopy.reroll = 0;\n  charCopy.saveRollReroll = 0;\n  this.setState({\n    \n  })\n}\n*/\n\nclearLocalStorage = () =>{\n  localStorage.clear();\n  window.location.reload();\n}\n\naddCharacter = (name) => {\n  let newCharacter = { character: name,\n  dice: [{sides: 4, diceRolled: 1, key: uuidv4()},\n    {sides: 6, diceRolled: 1, key: uuidv4()},\n    {sides: 8, diceRolled: 1, key: uuidv4()},\n    {sides: 10, diceRolled: 1, key: uuidv4()},\n    {sides: 12, diceRolled: 1, key: uuidv4()},\n    {sides: 20, diceRolled: 1, key: uuidv4()},\n    {sides: 100, diceRolled: 1, key: uuidv4()},],\n  addDie: 2,\n  modifier: 0,\n  diceRolled: 1,\n  history: [{\"max\": 20, \"result\": 1, \"mod\": 0, \"diceRolled\": 1, \"rolledArrayString\": \"1\", \"key\": 0, \"label\": \"My d20 Roll\", advantage: \"advantage\", advantageRolls: \"1, 1\"}],\n  savedRolls: [{\"saveDiceRolled\": 2, \"sides\": 4, \"modifier\": 2, \"label\": \"Healing Potion\"},\n               {\"saveDiceRolled\": 1, \"sides\": 20, \"modifier\": 5, \"label\": \"Attack\", \"advantage\": \"advantage\"},\n               {\"saveDiceRolled\": 10, \"sides\": 4, \"modifier\": 0, \"label\": \"Reroll 1s\", \"advantage\": \"\", reroll: 1,}],\n  saveLabel: \"\",\n  saveDiceRolled: 1,\n  saveRollSides: 2,\n  saveRollModifier: 0,\n  advantage: false,\n  saveRollAdvantage: false,\n  disadvantage: false,\n  saveRollDisadvantage: false,\n  explode: false,\n  saveRollExplode: false,\n  reroll: 0,\n  saveRollReroll: 0,\n  }\n  this.setState({\n    characters: [...this.state.characters, newCharacter]\n  })\n}\n\nsetCharacter = (name) =>\n{\nfor(let i = 0; i < this.state.characters.length; i++)\n if(this.state.characters[i].character === name) {\n character = this.state.characters[i];\n}\n}\n\nresetHistory = () =>{\n  this.setState({\n    history: [{\"max\": 20, \"result\": 1, \"mod\": 0, \"diceRolled\": 1, \"rolledArrayString\": \"1\", \"key\": 0, \"label\": \"My d20 Roll\", advantage: \"advantage\", advantageRolls: \"1, 1\"}],  })\n}\n\ngetRandomInt(max) {\n  let firstStep = Math.round(Math.random() * (max - 1) + 1);\n  return firstStep\n}\n\nsearchHistory(){\n  for (let i=0; i < this.state.history.length; i++) {\n      if (this.state.history[i].key === historyID) {\n          historyID++;\n      }\n  }\n}\n\nsortHistory = () => {\nlet newHistory = [...this.state.history];\n  let newHistory2 = newHistory.sort((a, b) => a.key - b.key);\n  this.setState({\n    history: newHistory2\n  })\n}\n\ndiceRoll = (event, max, diceRolled, mod, advantage, label, explode, reroll, disadvantage,) => {\n  event.preventDefault();\n  if (!diceRolled) { diceRolled = this.state.diceRolled;}\n  if (!mod) {\n    mod = this.state.modifier;\n  }\n  if (!advantage) { advantage = this.state.advantage }\n  if (!disadvantage) { disadvantage = this.state.disadvantage }\n  if (!explode) { explode = this.state.explode }\n  if (!reroll) { reroll = this.state.reroll }\n  let diceRolledArray = [];\n  let roll1;\n  let roll2;\n  let roll3;\n  let roll4;\n  let advHistoryArray = [];\n  let i = 0;\n    \n  while (i < diceRolled) {\n      roll1 = this.getRandomInt(max);\n      roll2 = this.getRandomInt(max);\n        if (advantage){\n        if (roll2 > roll1){\n          roll3 = roll2;\n          roll4 = roll1;\n        } else { roll3 = roll1; roll4 = roll2; }\n        }\n        else if (disadvantage){\n          if (roll2 < roll1){\n            roll3 = roll2;\n            roll4 = roll1;\n          } else { roll3 = roll1; roll4 = roll2;  }\n          } else { roll3 = roll1; roll4 = roll2; }\n      if (roll3 <= reroll)\n      { roll3 = this.getRandomInt(max); }\n      diceRolledArray.push(roll3);\n      advHistoryArray.push(` ${roll3}, ${roll4}`);\n      i++;\n      // eslint-disable-next-line\n      if (explode == true && roll3 == max) {\n        i--;\n      }\n  }\n  let arrayTotal = diceRolledArray.reduce((a,b) => (a + b));\n  let result = parseInt(arrayTotal) + parseInt(mod);\n  let arrayString = diceRolledArray.join(\", \");\n  if (mod > -1) {\n  toast(<div>{diceRolled}d{max} result: {result}\n  <br/>\n  ({arrayString} + {mod})<br/>\n  { advantage && !disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { advantage && disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { disadvantage && !advantage ? `Disadvantage rolls: ${roll3}, ${roll4}` : `` }\n    </div>);\n  } else {\n    let posMod = Math.abs(mod);\n    toast(<div>{diceRolled}d{max} result: {result}\n      <br/>\n      ({arrayString} - {posMod} )<br/>\n      { advantage && !disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { advantage && disadvantage ? ` Advantage rolls: ${roll3}, ${roll4}` : `` } { disadvantage && !advantage ? `Disadvantage rolls: ${roll3}, ${roll4}` : `` }\n        </div>);\n  }\n  let latestRoll = { \"max\": max, \"result\": result, \"mod\": mod, \"diceRolled\": diceRolled, \"rolledArrayString\": arrayString };\n  if (advantage||disadvantage) { \n  let arrayString = advHistoryArray.join(\"; \");\n    latestRoll.advantageRolls = arrayString;\n    if (advantage){latestRoll.advantage = \"advantage\";}\n    if (disadvantage){latestRoll.advantage = \"disadvantage\";}\n  }\n  if (label){\n    latestRoll.label = label;\n  }\n  this.searchHistory();\n  latestRoll.key = historyID;\n  let newHistory = [...this.state.history, latestRoll];\n  let newHistory2 = newHistory.sort((a, b) => a.key - b.key);\n  this.setState({\n    history: newHistory2\n  })\n  this.scrollToTop();\n}\n\npushDie = () => {\n  this.setState({\n    dice: [...this.state.dice, \n      { sides: this.state.addDie, diceRolled: this.state.diceRolled, key: uuidv4(), }\n    ],\n    addDie: 2,\n    diceRolled: 1,\n  })\n}\n\ndeleteDie = (event, current) => {\n  event.preventDefault();\n  let index = this.state.dice.indexOf(current);\n  this.state.dice.splice(index, 1);\n  this.setState({\n    dice: this.state.dice\n  })\n}\n\nsaveRoll = () => {\n  this.setState({\n    savedRolls: [...this.state.savedRolls, {\n      \"saveDiceRolled\": this.state.saveDiceRolled,\n      \"sides\": this.state.saveRollSides,\n      \"modifier\": this.state.saveRollModifier,\n      \"advantage\": this.state.saveRollAdvantage,\n      \"disadvantage\": this.state.saveRollDisadvantage,\n      \"explode\": this.state.saveRollExplode,\n      \"label\": this.state.saveLabel,\n      reroll: this.state.saveRollReroll,\n      \"key\": Date.now(),\n    }],\n    saveLabel: \"\",\n    //saveRollReroll: 0,\n  })\n}\n\ndeleteRoll = (event, current) => {\n  event.preventDefault();\n  let index = this.state.savedRolls.indexOf(current);\n  this.state.savedRolls.splice(index, 1);\n  this.setState({\n    savedRolls: this.state.savedRolls\n  })\n}\n\nrenderDice() {\n  return this.state.dice.map((current) =>\n  <>\n  <Table >\n  <tbody className=\"text-center\">\n      <tr key={current.key}>\n      <td><button className=\"buttons\" onClick={(event) => this.diceRoll(event, current.sides, current.diceRolled, this.state.modifier, this.state.advantage, this.state.label, this.state.explode, this.state.reroll, this.state.disadvantage,)}>{current.diceRolled}d{current.sides}</button></td>\n      <td><button className=\"buttons\" onClick={(event) => this.deleteDie(event, current)}>Remove</button></td>\n      </tr>\n      </tbody>\n    </Table>\n  </>\n  )\n}\n\nshowHistory() {\n  let history = this.state.history;\n  history = history.sort((a, b) => a.key - b.key)\n  return history.reverse().map((current) =>\n  <>\n  <Table >\n    <tbody>\n  <tr key={current.key}>\n    <td >{current.label}</td>\n    <td className=\"td-small\">{current.diceRolled}d{current.max}</td>\n    <td className=\"td-small\">{current.result}</td>\n    <td >({current.rolledArrayString} + {current.mod})</td>\n    <td >{current.advantage === \"advantage\" ? `Advantage rolls: ${current.advantageRolls}` : \"\"} {current.advantage === \"disadvantage\" ? `Disadvantage rolls: ${current.advantageRolls}` : \"\"}</td>\n  </tr>\n  </tbody>\n  </Table>\n  </>\n  )\n}\n\n\nscrollToTop = () => {\n  this.historyRef.current.scrollTop = 0;\n};\n\n\nshowSavedRolls() {\n  return this.state.savedRolls.map((current) =>\n  <>\n  <Table >\n  <tbody className=\"fixed-width-columns text-center\">\n<tr key={current.key}>\n      <td >{current.label}</td>\n      <td ><button  className=\"buttons\" onClick={(event) => this.diceRoll(event, current.sides, current.saveDiceRolled, current.modifier, current.advantage, current.label, current.explode, current.reroll)}>{current.saveDiceRolled}d{current.sides} + {current.modifier}</button></td>\n      <td >{current.advantage ? \"Advantage\" : <i>       </i>} {current.disadvantage ? \"Disadvantage\" : <i>       </i>} {current.explode ? \"Explode\" : <i>       </i>}</td>\n      <td><button  className=\"buttons\" onClick={(event) => this.deleteRoll(event, current)}>Remove</button></td>\n      </tr>\n      </tbody>\n      </Table>\n  </>\n  )\n}\n\nhandleChange = (event) => {\n  const newState = {};\nif (event.target.name === 'advantage' || \nevent.target.name === 'disadvantage' || \nevent.target.name === 'explode' || \nevent.target.name === 'saveRollAdvantage' ||\nevent.target.name === 'saveRollDisadvantage' ||\nevent.target.name === 'saveRollExplode'\n){ newState[event.target.name] = !this.state[event.target.name]; }\nelse { newState[event.target.name] = event.target.value }\n  this.setState(newState)\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault();\n  this.setState({\n    dice: [...this.state.dice, this.state.addDie]\n  })\n}\n\nrender () {\n    return (\n    <>\n      <Container fluid>\n      <ToastContainer />\n      <Container>\n      <Row>\n      <Col >\n\n      <Table bordered>\n        <thead>\n          <tr>\n          <th>Dice</th>\n          </tr>\n          </thead>\n        <div className=\"rolls-container\">\n        {this.renderDice()}\n        </div>\n        </Table>\n\n      <Form>\n      <label>\n      <u>Roll Options</u>\n        <br/>Modifier: <br/>\n          <input type=\"number\" name=\"modifier\" step=\"1\" value={this.state.modifier} onChange={(e) => this.handleChange(e)} />\n        <br/>Reroll numbers up to: <br/>\n          <input type=\"number\" name=\"reroll\" min=\"0\" step=\"1\" value={this.state.reroll} onChange={(e) => this.handleChange(e)} />\n          <br/><nobr data-tip data-for=\"advantageTip\" className=\"advantage-tooltip\">Advantage:</nobr><ReactToolTip id=\"advantageTip\" place=\"top\" effect=\"solid\">\n                Rolls two dice and takes the higher number.\n                </ReactToolTip>&nbsp;\n          <input type=\"checkbox\" name=\"advantage\" value={this.state.advantage} onChange={(e) => this.handleChange(e)} />\n          <br/><nobr data-tip data-for=\"disadvantageTip\" className=\"disadvantage-tooltip\">Disadvantage:</nobr><ReactToolTip id=\"disadvantageTip\" place=\"top\" effect=\"solid\">\n                Rolls two dice and takes the lower number.\n                </ReactToolTip>&nbsp;\n          <input type=\"checkbox\" name=\"disadvantage\" value={this.state.disadvantage} onChange={(e) => this.handleChange(e)} />\n          <br/><nobr data-tip data-for=\"explodeTip\" className=\"explode-tooltip\">Explode:</nobr><ReactToolTip id=\"explodeTip\" place=\"top\" effect=\"solid\">\n                If the highest number is rolled on the die, an extra die is rolled and added to the total.\n                </ReactToolTip>&nbsp;\n              <input type=\"checkbox\" name=\"explode\" value={this.state.explode} onChange={(e) => this.handleChange(e)} />\n          <hr/>\n      <u>Add Custom Die</u>\n          <br/>Number of dice to roll: <br/>\n          <input type=\"number\" name=\"diceRolled\" step=\"1\" value={this.state.diceRolled} onChange={(e) => this.handleChange(e)} />\n          \n          <br/>Custom die sides:<br/>\n          <input type=\"number\" name=\"addDie\" min=\"1\" step=\"1\" value={this.state.addDie} onChange={(e) => this.handleChange(e)} />\n          \n        </label>\n        <br/>\n        <input type=\"button\" onClick={this.pushDie} value=\"Add Custom Die\"/>\n        </Form>\n        \n<br/><br/>\n        \n      </Col>\n\n      <Col>\n\n      <Table bordered>\n        <thead>\n          <tr>\n          <th>Saved Rolls</th>\n          </tr>\n          </thead>\n        <div className=\"saved-rolls-container\">\n        {this.showSavedRolls()}\n        </div>\n        </Table>\n  \n      <Form>\n        <label>\n          <u>Save roll</u>\n          <br/>Label:<br/> <input type=\"text\" name=\"saveLabel\" value={this.state.saveLabel} onChange={(e) => this.handleChange(e)} />\n          <br/>Number of dice to roll:<br/> <input type=\"number\" name=\"saveDiceRolled\" min=\"1\" step=\"1\" value={this.state.saveDiceRolled} onChange={(e) => this.handleChange(e)} />\n          <br/>Die sides:<br/> <input type=\"number\" name=\"saveRollSides\" min=\"1\" step=\"1\" value={this.state.saveRollSides} onChange={(e) => this.handleChange(e)} />\n          <br/>Modifier:<br/> <input type=\"number\" name=\"saveRollModifier\" step=\"1\" value={this.state.saveRollModifier} onChange={(e) => this.handleChange(e)} />\n          <br/>Reroll numbers up to:<br/> <input type=\"number\" name=\"saveRollReroll\" min=\"0\" step=\"1\" value={this.state.saveRollReroll} onChange={(e) => this.handleChange(e)} />\n          <br/><nobr data-tip data-for=\"advantageTip\" className=\"advantage-tooltip\">Advantage:</nobr><ReactToolTip id=\"advantageTip\" place=\"top\" effect=\"solid\">\n                Rolls two dice and takes the higher number.\n                </ReactToolTip>&nbsp;\n                <input type=\"checkbox\" name=\"saveRollAdvantage\" value={this.state.saveRollAdvantage} onChange={(e) => this.handleChange(e)} />\n          {this.state.saveRollAdvantage}\n          <br/><nobr data-tip data-for=\"disadvantageTip\" className=\"disadvantage-tooltip\">Disadvantage:</nobr><ReactToolTip id=\"disadvantageTip\" place=\"top\" effect=\"solid\">\n                Rolls two dice and takes the lower number.\n                </ReactToolTip>&nbsp;\n                 <input type=\"checkbox\" name=\"saveRollDisadvantage\" value={this.state.saveRollDisadvantage} onChange={(e) => this.handleChange(e)} />\n          {this.state.saveRollDisadvantage}\n          <br/><nobr data-tip data-for=\"explodeTip\" className=\"explode-tooltip\">Explode:</nobr><ReactToolTip id=\"explodeTip\" place=\"top\" effect=\"solid\">\n                If the highest number is rolled on the die, an extra die is rolled and added to the total.\n                </ReactToolTip> &nbsp; <input type=\"checkbox\" name=\"saveRollExplode\" value={this.state.saveRollExplode} onChange={(e) => this.handleChange(e)} />\n          {this.state.saveRollExplode}\n        </label>\n\n        <br/>\n        <input type=\"button\" onClick={this.saveRoll} value=\"Save Roll\"/>\n        </Form>\n        <br/>\n      </Col>\n     \n      <Col >\n      <Table bordered>\n        <thead>\n          <tr>\n          <th>History</th>\n          </tr>\n          </thead>\n        <div className=\"history-container\" ref={this.historyRef}>\n        {this.showHistory()}\n        </div>\n \n      </Table>\n      <Form>\n      <label>\n          <br/><br/>\n        <input type=\"button\" onClick={this.saveStateToLocalStorage} value=\"Save rolls, dice, and history\" />\n        <br/>If you save your custom dice, custom rolls, and roll history, they will be here when you come back to this page. Otherwise, you'll start afresh. \n        <br/><br/>\n        <input type=\"button\" onClick={this.resetHistory} value=\"Reset History\" />\n        <br/>This button resets the roll history to its original state.\n        <br/><br/>\n        <input type=\"button\" onClick={this.clearLocalStorage} value=\"Reset to Default\" />\n        <br/>This button resets your custom dice, custom rolls, and roll history to their original states.\n        </label>\n        </Form>\n \n      </Col>\n      </Row>\n      </Container>\n      </Container>\n    </>\n  );\n}\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}